{"version":3,"sources":["components/SampleData/SampleData.tsx","components/UserContext.tsx","components/Modal/SalamiAddModal.tsx","components/Modal/SalamiRemoveModal.tsx","components/Table/SalamiList.tsx","components/Table/SalamiSampleList.tsx","components/Earn/Earn.tsx","components/Spend/Spend.tsx","components/Balance/Balance.tsx","components/MainPage.tsx","components/Title.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["sampleEarnData","id","name","amount","status","sampleSpendData","purpose","addSalamiContext","addOpen","whatIDid","setAddOpen","removeSalamiContext","removeOpen","setRemoveOpen","salamiBalanceContext","balance","earn","spend","setBalance","userContext","createContext","salamiAddModalContext","salamiRemoveModalContext","salamiBalance","salamiSpendContext","UserProvider","children","useState","sampleUsers","salamiSpendSampleData","Provider","value","SalamiAddModal","open","salamiHandleAddClose","formData","setFormData","useContext","onClickHandler","e","target","Modal","onClose","onSubmit","preventDefault","a","fetch","method","body","JSON","stringify","headers","postFormData","json","jsonData","data","_id","earnCollection","noValidate","autoComplete","className","style","width","TextField","onChange","fullWidth","label","variant","type","Button","color","SalamiRemoveModal","onClick","axios","post","deletedCount","removeSalamiById","margin","SalamiList","list","index","salamiHandleRemoveOpen","TableRow","TableCell","align","to","SalamiSampleList","Earn","earnList","setEarnList","useEffect","get","response","salmiData","salamiData","catch","err","console","log","message","totalAmount","reduce","acc","current","Number","Grid","container","item","xs","TableContainer","Table","TableBody","length","map","colSpan","Spend","spendList","setSpendList","getAllSpendList","Balance","TabPanel","props","hidden","Box","p","Typography","MainPage","setValue","Paper","Tabs","event","newValue","indicatorColor","textColor","centered","Tab","MainTitle","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sYAAaA,EAAiB,CAC5B,CAAEC,GAAI,EAAGC,KAAM,wCAAWC,OAAQ,IAAKC,OAAQ,QAC/C,CAAEH,GAAI,EAAGC,KAAM,2BAAQC,OAAQ,IAAKC,OAAQ,QAC5C,CAAEH,GAAI,EAAGC,KAAM,oDAAaC,OAAQ,IAAKC,OAAQ,SAGtCC,EAAkB,CAC7B,CAAEJ,GAAI,EAAGK,QAAS,kFAAkBH,OAAQ,GAAIC,OAAQ,SACxD,CAAEH,GAAI,EAAGK,QAAS,mFAAmBH,OAAQ,GAAIC,OAAQ,U,OCerDG,EAAmB,CACvBC,QAAS,CAAEJ,QAAQ,EAAOK,SAAU,IACpCC,WAAY,SAACF,MAGTG,EAAsB,CAC1BC,WAAY,CAAER,QAAQ,GACtBS,cAAe,SAACD,MAGZE,EAAuB,CAC3BC,QAAS,CAAEC,KAAM,EAAGC,MAAO,EAAGF,QAAS,GACvCG,WAAY,SAACH,MAGFI,EAAcC,wBAA8BpB,GAC5CqB,EAAwBD,wBAAcb,GACtCe,EAA2BF,wBAAcT,GACzCY,EAAgBH,wBAAcN,GAE9BU,EACXJ,wBAA+Bf,GAE1B,SAASoB,EAAT,GAAoD,IAA5BC,EAA2B,EAA3BA,SAC7B,EACEC,mBAAyB3B,GAD3B,mBAAO4B,EAAP,KAGA,GAHA,KAIED,mBAA0BtB,IAD5B,mBAAOwB,EAAP,KAGA,GAHA,KAG8BF,mBAASpB,EAAiBC,UAAxD,mBAAOA,EAAP,KAAgBE,EAAhB,KACA,EAAoCiB,mBAAShB,EAAoBC,YAAjE,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAA8Bc,mBAASb,EAAqBC,SAA5D,mBAAOA,EAAP,KAAgBG,EAAhB,KAEA,OACE,cAACC,EAAYW,SAAb,CAAsBC,MAAOH,EAA7B,SACE,cAACJ,EAAmBM,SAApB,CAA6BC,MAAOF,EAApC,SACE,cAACR,EAAsBS,SAAvB,CAAgCC,MAAO,CAAEvB,UAASE,cAAlD,SACE,cAACY,EAAyBQ,SAA1B,CACEC,MAAO,CAAEnB,aAAYC,iBADvB,SAGE,cAACU,EAAcO,SAAf,CAAwBC,MAAO,CAAEhB,UAASG,cAA1C,SACGQ,YCsDAM,MArGf,YAAiE,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,qBAC9B,EAAgCP,mBAA4B,IAA5D,mBAAOQ,EAAP,KAAiBC,EAAjB,KACA,EAAgCC,qBAAWhB,GAAnCb,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,WAEX4B,EAAiB,SAACC,GACtBH,EAAY,2BACPD,GADM,kBAERI,EAAEC,OAAOtC,KAAOqC,EAAEC,OAAOT,UA4C9B,OACE,cAACU,EAAA,EAAD,CACER,KAAMA,EACNS,QAASR,EACT,kBAAgB,qBAChB,mBAAiB,2BAJnB,SAME,uBACES,SAhDkB,SAACJ,GACvBA,EAAEK,iBAEkB,uCAAG,sCAAAC,EAAA,yDACI,SAArBrC,EAAQC,SADS,gCAEQqC,MACzB,yCACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUf,GACrBgB,QAAS,CACP,eAAgB,qCARH,cAEbC,EAFa,gBAYIA,EAAaC,OAZjB,QAanB,QADMC,EAZa,cAanB,IAAIA,GAAJ,UAAIA,EAAUC,YAAd,aAAI,EAAgBC,MAClB9C,EAAW,CAAEN,QAAQ,EAAOK,SAAU,KAdrB,UAiBI,UAArBD,EAAQC,SAjBS,kCAkBQqC,MACzB,0CACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUf,GACrBgB,QAAS,CACP,eAAgB,qCAxBH,eAkBbC,EAlBa,iBA4BIA,EAAaC,OA5BjB,SA6BnB,QADMC,EA5Ba,cA6BnB,IAAIA,GAAJ,UAAIA,EAAUC,YAAd,aAAI,EAAgBC,MAClB9C,EAAW,CAAEN,QAAQ,EAAOK,SAAU,KA9BrB,4CAAH,oDAkCpBgD,IAYIC,YAAU,EACVC,aAAa,MACbC,UAAU,gBACVC,MAAO,CAAEC,MAAO,SALlB,UAOE,6BACwB,SAArBtD,EAAQC,SACL,mFACA,iGAEN,cAACsD,EAAA,EAAD,CACE7D,KAAK,OACLD,GAAG,iBACH+D,SAAU1B,EACV2B,WAAS,EACTC,MACuB,SAArB1D,EAAQC,SACJ,wHACA,2FAEN0D,QAAQ,aAEV,cAACJ,EAAA,EAAD,CACEK,KAAK,SACLlE,KAAK,SACLD,GAAG,iBACH+D,SAAU1B,EACV2B,WAAS,EACTC,MACuB,SAArB1D,EAAQC,SAAsB,6EAAmB,0FAEnD0D,QAAQ,aAEV,cAACE,EAAA,EAAD,CAAQD,KAAK,SAASD,QAAQ,YAAYG,MAAM,YAAhD,SACwB,SAArB9D,EAAQC,SAAsB,wCAAY,0H,iBCjBtC8D,MAjFf,YAAwD,IAA3BtC,EAA0B,EAA1BA,KAAMxB,EAAoB,EAApBA,SACjC,EAAsC4B,qBAAWf,GAA7BT,GAApB,EAAQD,WAAR,EAAoBC,eA+CpB,OACE,cAAC4B,EAAA,EAAD,CACER,KAAMA,EAAK7B,OACX,kBAAgB,qBAChB,mBAAiB,2BAHnB,SAKE,sBAAKwD,UAAU,gBAAgBC,MAAO,CAAEC,MAAO,SAA/C,UACE,4IACA,sBAAKF,UAAU,eAAf,UACE,cAACS,EAAA,EAAD,CACED,KAAK,SACLI,QAvDkB,SAACjC,GAC3BA,EAAEK,iBAGoB,uCAAG,sBAAAC,EAAA,yDACN,SAAbpC,EADmB,gCAEEgE,IAAMC,KAC3B,2CACA,CACEzE,GAAIgC,EAAKhC,KALQ,cAQRsD,KAAKA,KAAKoB,aAAe,GACpC9D,EAAc,CACZT,QAAQ,IAVS,UAeN,UAAbK,EAfmB,iCAgBEgE,IAAMC,KAC3B,4CACA,CACEzE,GAAIgC,EAAKhC,KAnBQ,cAsBRsD,KAAKA,KAAKoB,aAAe,GACpC9D,EAAc,CACZT,QAAQ,IAxBS,4CAAH,oDA6BtBwE,IAuBQT,QAAQ,YACRG,MAAM,YACNT,MAAO,CAAEgB,OAAQ,QALnB,4CASA,cAACR,EAAA,EAAD,CACED,KAAK,SACLI,QA3BiB,SAACjC,GAC1BA,EAAEK,iBACF/B,EAAc,CACZT,QAAQ,KAyBF+D,QAAQ,YACRG,MAAM,UACNT,MAAO,CAAEgB,OAAQ,QALnB,mC,kCCvCKC,MAtBf,YAAsE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,uBACjC,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,4BAAIH,EAAQ,MAEd,cAACG,EAAA,EAAD,UAAYJ,EAAK7E,OACjB,eAACiF,EAAA,EAAD,CAAWC,MAAM,SAAjB,oBAA6BL,EAAK5E,UAClC,cAACgF,EAAA,EAAD,CAAWC,MAAM,SAASvB,MAAO,CAAEC,MAAO,SAA1C,SACE,cAAC,IAAD,CAAMuB,GAAG,IAAT,SACE,cAAC,IAAD,CAAUxB,MAAO,CAAES,MAAO,eAG9B,cAACa,EAAA,EAAD,CAAWC,MAAM,SAASvB,MAAO,CAAEC,MAAO,SAA1C,SACE,cAAC,IAAD,CAAMuB,GAAG,IAAIb,QAAS,SAACjC,GAAD,OAAO0C,EAAuBF,EAAKvB,MAAzD,SACE,cAAC,IAAD,CAAmBK,MAAO,CAAES,MAAO,eAb1BS,EAAKvB,MCkBT8B,MApBf,YAA6C,IAAjBP,EAAgB,EAAhBA,KAC1B,OACE,eAACG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAYJ,EAAK9E,KACjB,cAACkF,EAAA,EAAD,UAAYJ,EAAK7E,KAAO6E,EAAK7E,KAAO6E,EAAKzE,UACzC,eAAC6E,EAAA,EAAD,CAAWC,MAAM,SAAjB,oBAA6BL,EAAK5E,UAClC,cAACgF,EAAA,EAAD,CAAWC,MAAM,SAASvB,MAAO,CAAEC,MAAO,SAA1C,SACE,cAAC,IAAD,CAAMuB,GAAG,IAAT,SACE,cAAC,IAAD,CAAUxB,MAAO,CAAES,MAAO,eAG9B,cAACa,EAAA,EAAD,CAAWC,MAAM,SAASvB,MAAO,CAAEC,MAAO,SAA1C,SACE,cAAC,IAAD,CAAMuB,GAAG,IAAT,SACE,cAAC,IAAD,CAAmBxB,MAAO,CAAES,MAAO,eAX1BS,EAAK9E,KC4ITsF,MA/Hf,WACE,IAAM3D,EAAcS,qBAAgClB,GACpD,EAAgCkB,qBAAWhB,GAAnCb,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,WACjB,EAAsC2B,qBAAWf,GAAzCV,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cACpB,EAAgCc,mBAAwB,IAAxD,mBAAO6D,EAAP,KAAiBC,EAAjB,KACA,EAAgCpD,qBAAWd,GAAnCR,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,WAEjBwE,qBAAU,YACQ,uCAAG,8BAAA7C,EAAA,sEACM4B,IAAMkB,IAC3B,6CAFe,OACXC,EADW,OAIXC,EAAYD,EAASrC,KAAKA,KAChCkC,EAAYI,GALK,2CAAH,qDAOhBC,GAAaC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,EAAIG,cAC3C,IAGHT,qBAAU,WACR,IAAMU,EAAc,WAKlB,OAJqBZ,EAASa,QAC5B,SAACC,EAAKC,GAAN,OAAkBC,OAAOF,GAAOE,OAAOD,EAAQpG,UAC/C,IAIJiG,IACAlF,EAAW,2BAAKH,GAAN,IAAeC,KAAMoF,SAC9B,CAACZ,IAGJ,IAgBMP,EAAyB,SAAChF,GAC9BY,EAAc,CACZT,QAAQ,EACRH,GAAIA,KAIR,OACE,eAACwG,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WAEE,eAAC7B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,UACE,qDAEF,cAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,2DAEF,cAACD,EAAA,EAAD,CAAWC,MAAM,SAASvB,MAAO,CAAEC,MAAO,SAA1C,SACE,mFAEF,cAACqB,EAAA,EAAD,CAAWC,MAAM,SAASvB,MAAO,CAAEC,MAAO,SAA1C,SACE,0EAKF0B,EAASwB,OACLxB,EAASyB,KAAI,SAAClC,EAAMC,GAAP,OACX,cAAC,EAAD,CAEED,KAAMA,EACNC,MAAOA,EACPC,uBAAwBA,GAHnBD,MAMTpD,EAAYqF,KAAI,SAAClC,GAAD,OACd,cAAC,EAAD,CAAkBA,KAAMA,GAAWA,EAAK9E,OAKhD,eAACiF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAW+B,QAAS,EAAG9B,MAAM,QAA7B,SACE,6IAEF,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,wCAAMrE,EAAQC,MAAQ,WAExB,cAACmE,EAAA,EAAD,CAAW+B,QAAS,EAApB,SACE,cAAC7C,EAAA,EAAD,CACED,KAAK,SACLI,QAAS,WAvEzB9D,EAAW,CACTN,QAAQ,EACRK,SAqEiD,UACnC0D,QAAQ,YACRG,MAAM,YACNT,MAAO,CAAEgB,OAAQ,qBALnB,4GAgBZ,cAAC,EAAD,CACE5C,KAAMzB,EAAQJ,OACd8B,qBAhFuB,WAC3BxB,EAAW,CACTN,QAAQ,EACRK,SAAU,QA+EV,cAAC,EAAD,CAAmBwB,KAAMrB,EAAYH,SAAS,aCErC0G,MA9Hf,WACE,IAAMvF,EAAcS,qBAAgCb,GACpD,EAAkCG,mBAAwB,IAA1D,mBAAOyF,EAAP,KAAkBC,EAAlB,KACA,EAAgChF,qBAAWhB,GAAnCb,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,WACjB,EAAsC2B,qBAAWf,GAAzCV,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cACpB,EAAgCwB,qBAAWd,GAAnCR,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,WAGjBwE,qBAAU,YACa,uCAAG,4BAAA7C,EAAA,sEACC4B,IAAMkB,IAC3B,8CAFoB,OAChBC,EADgB,OAItByB,EAAazB,EAASrC,KAAKA,MAJL,2CAAH,qDAMrB+D,KACC,IAGH5B,qBAAU,WACR,IAAMU,EAAc,WAKlB,OAJqBgB,EAAUf,QAC7B,SAACC,EAAKC,GAAN,OAAkBC,OAAOF,GAAOE,OAAOD,EAAQpG,UAC/C,IAIJiG,IACAlF,EAAW,2BAAKH,GAAN,IAAeE,MAAOmF,SAC/B,CAACgB,IAGJ,IAAMnC,EAAyB,SAAChF,GAC9BY,EAAc,CACZT,QAAQ,EACRH,GAAIA,KAoBR,OACE,eAACwG,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAAC7B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,UACE,oFAEF,cAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,2DAEF,cAACD,EAAA,EAAD,CAAWC,MAAM,SAASvB,MAAO,CAAEC,MAAO,SAA1C,SACE,mFAEF,cAACqB,EAAA,EAAD,CAAWC,MAAM,SAASvB,MAAO,CAAEC,MAAO,SAA1C,SACE,0EAMHsD,GAAaA,EAAUJ,OACpBI,EAAUH,KAAI,SAAClC,EAAMC,GAAP,OACZ,cAAC,EAAD,CAEED,KAAMA,EACNC,MAAOA,EACPC,uBAAwBA,GAHnBD,MAMTpD,EAAYqF,KAAI,SAAClC,GAAD,OACd,cAAC,EAAD,CAAkBA,KAAMA,GAAWA,EAAK9E,OAI9C,eAACiF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAW+B,QAAS,EAAG9B,MAAM,QAA7B,SACE,2HAEF,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,wCAAMrE,EAAQE,WAEhB,cAACkE,EAAA,EAAD,CAAW+B,QAAS,EAApB,SACE,cAAC7C,EAAA,EAAD,CACED,KAAK,SACLI,QAAS,WAtDzB9D,EAAW,CACTN,QAAQ,EACRK,SAoD+C,WACjC0D,QAAQ,YACRG,MAAM,YACNT,MAAO,CAAEgB,OAAQ,qBALnB,oFAgBZ,cAAC,EAAD,CACE5C,KAAMzB,EAAQJ,OACd8B,qBA/EuB,WAC3BxB,EAAW,CACTN,QAAQ,EACRK,SAAU,QA8EV,cAAC,EAAD,CAAmBwB,KAAMrB,EAAYH,SAAS,cCzIrC8G,MAbf,WACE,MAAgClF,qBAAWd,GAAnCR,EAAR,EAAQA,QAER,OAFA,EAAiBG,WACjB+E,QAAQC,IAAInF,GAEV,gCACE,+IAA6BA,EAAQC,KAArC,+BACA,qJAA8BD,EAAQE,MAAtC,+BACA,uBACA,0EAAeF,EAAQC,KAAOD,EAAQE,MAAtC,mCCKN,SAASuG,GAASC,GAChB,IAAQ/F,EAA2B+F,EAA3B/F,SAAUK,EAAiB0F,EAAjB1F,MAAOiD,EAAUyC,EAAVzC,MAEzB,OACE,qBAAK0C,OAAQ3F,IAAUiD,EAAO/E,GAAE,mCAA8B+E,GAA9D,SACGjD,IAAUiD,GACT,cAAC2C,EAAA,EAAD,CAAKC,EAAG,EAAR,SACE,cAACC,EAAA,EAAD,UAAanG,QA2CRoG,OApCf,WACE,MAA0BnG,mBAAS,GAAnC,mBAAOI,EAAP,KAAcgG,EAAd,KAMA,OACE,qCACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACElG,MAAOA,EACPiC,SATa,SAACkE,EAA8BC,GAClDJ,EAASI,IASHC,eAAe,UACfC,UAAU,UACVC,UAAQ,EALV,UAOE,cAACC,EAAA,EAAD,CAAKrE,MAAM,+EACX,cAACqE,EAAA,EAAD,CAAKrE,MAAM,qFACX,cAACqE,EAAA,EAAD,CAAKrE,MAAM,0FAIf,cAACsD,GAAD,CAAUzF,MAAOA,EAAOiD,MAAO,EAA/B,SACE,cAAC,EAAD,MAEF,cAACwC,GAAD,CAAUzF,MAAOA,EAAOiD,MAAO,EAA/B,SACE,cAAC,EAAD,MAEF,cAACwC,GAAD,CAAUzF,MAAOA,EAAOiD,MAAO,EAA/B,SACE,cAAC,EAAD,UC5DD,SAASwD,KACd,OAAO,oBAAI5E,UAAU,aAAd,mICqBM6E,OAjBf,WACE,OACE,qBAAK7E,UAAU,kBAAf,SACE,eAACnC,EAAD,WACE,cAAC+G,GAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,gBCCCC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.aa1ad0cb.chunk.js","sourcesContent":["export const sampleEarnData = [\n  { id: 1, name: \"বড় মামা\", amount: 100, status: \"earn\" },\n  { id: 2, name: \"চাচা\", amount: 200, status: \"earn\" },\n  { id: 3, name: \"খালা মানি\", amount: 300, status: \"earn\" },\n];\n\nexport const sampleSpendData = [\n  { id: 1, purpose: \"আইসচ্রিম খাইছি\", amount: 50, status: \"spent\" },\n  { id: 2, purpose: \"কোকা কোলা খাইছি\", amount: 15, status: \"spent\" },\n];\n","import { useState, createContext, ReactNode } from \"react\";\nimport { sampleEarnData } from \"./SampleData/SampleData\";\nimport { sampleSpendData } from \"./SampleData/SampleData\";\n\n// interface\ninterface ISampleUsers {\n  id: number;\n  name: string;\n  amount: number;\n  status: string;\n}\n\ninterface ISpendContext {\n  id: number;\n  purpose: string;\n  amount: number;\n  status: string;\n}\n\ntype ReactNodeType = {\n  children: ReactNode;\n};\n\nconst addSalamiContext = {\n  addOpen: { status: false, whatIDid: \"\" },\n  setAddOpen: (addOpen: { status: boolean; whatIDid: string }) => {},\n};\n\nconst removeSalamiContext = {\n  removeOpen: { status: false },\n  setRemoveOpen: (removeOpen: { status: boolean; id?: number }) => {},\n};\n\nconst salamiBalanceContext = {\n  balance: { earn: 0, spend: 0, balance: 0 },\n  setBalance: (balance: { earn: number; spend: number; balance: number }) => {},\n};\n\nexport const userContext = createContext<ISampleUsers[]>(sampleEarnData);\nexport const salamiAddModalContext = createContext(addSalamiContext);\nexport const salamiRemoveModalContext = createContext(removeSalamiContext);\nexport const salamiBalance = createContext(salamiBalanceContext);\n\nexport const salamiSpendContext =\n  createContext<ISpendContext[]>(sampleSpendData);\n\nexport function UserProvider({ children }: ReactNodeType) {\n  const [sampleUsers, setSampleUsers] =\n    useState<ISampleUsers[]>(sampleEarnData);\n\n  const [salamiSpendSampleData, SetSalamiSpendSampleData] =\n    useState<ISpendContext[]>(sampleSpendData);\n\n  const [addOpen, setAddOpen] = useState(addSalamiContext.addOpen);\n  const [removeOpen, setRemoveOpen] = useState(removeSalamiContext.removeOpen);\n  const [balance, setBalance] = useState(salamiBalanceContext.balance);\n\n  return (\n    <userContext.Provider value={sampleUsers}>\n      <salamiSpendContext.Provider value={salamiSpendSampleData}>\n        <salamiAddModalContext.Provider value={{ addOpen, setAddOpen }}>\n          <salamiRemoveModalContext.Provider\n            value={{ removeOpen, setRemoveOpen }}\n          >\n            <salamiBalance.Provider value={{ balance, setBalance }}>\n              {children}\n            </salamiBalance.Provider>\n          </salamiRemoveModalContext.Provider>\n        </salamiAddModalContext.Provider>\n      </salamiSpendContext.Provider>\n    </userContext.Provider>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { salamiAddModalContext } from \"./../UserContext\";\n\ninterface ISate {\n  formData: {\n    name: string;\n    amount: number;\n  }[];\n}\n\ninterface IProps {\n  open: boolean;\n  salamiHandleAddClose: () => void;\n}\n\nfunction SalamiAddModal({ open, salamiHandleAddClose }: IProps) {\n  const [formData, setFormData] = useState<ISate[\"formData\"]>([]);\n  const { addOpen, setAddOpen } = useContext(salamiAddModalContext);\n\n  const onClickHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmitHandler = (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // Post data in MongoDB\n    const earnCollection = async () => {\n      if (addOpen.whatIDid === \"earn\") {\n        const postFormData = await fetch(\n          \"https://eid-salami.herokuapp.com/earn/\",\n          {\n            method: \"POST\",\n            body: JSON.stringify(formData),\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\",\n            },\n          }\n        );\n        const jsonData = await postFormData.json();\n        if (jsonData?.data?._id) {\n          setAddOpen({ status: false, whatIDid: \"\" });\n        }\n      }\n      if (addOpen.whatIDid === \"spend\") {\n        const postFormData = await fetch(\n          \"https://eid-salami.herokuapp.com/spend/\",\n          {\n            method: \"POST\",\n            body: JSON.stringify(formData),\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\",\n            },\n          }\n        );\n        const jsonData = await postFormData.json();\n        if (jsonData?.data?._id) {\n          setAddOpen({ status: false, whatIDid: \"\" });\n        }\n      }\n    };\n    earnCollection();\n  };\n\n  return (\n    <Modal\n      open={open}\n      onClose={salamiHandleAddClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <form\n        onSubmit={onSubmitHandler}\n        noValidate\n        autoComplete=\"off\"\n        className=\"modal-wrapper\"\n        style={{ width: \"500px\" }}\n      >\n        <h3>\n          {addOpen.whatIDid === \"earn\"\n            ? \"সালামি জমা করুন\"\n            : \"খরচ নথিভুক্ত করুন\"}\n        </h3>\n        <TextField\n          name=\"name\"\n          id=\"outlined-basic\"\n          onChange={onClickHandler}\n          fullWidth\n          label={\n            addOpen.whatIDid === \"earn\"\n              ? \"যার থেকে সালামি পেয়েছি\"\n              : \"যে খাত এ খরচ হয়েছে\"\n          }\n          variant=\"outlined\"\n        />\n        <TextField\n          type=\"number\"\n          name=\"amount\"\n          id=\"outlined-basic\"\n          onChange={onClickHandler}\n          fullWidth\n          label={\n            addOpen.whatIDid === \"earn\" ? \"যত টাকা পেয়েছি\" : \"যত টাকা খরচ হয়েছে\"\n          }\n          variant=\"outlined\"\n        />\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n          {addOpen.whatIDid === \"earn\" ? \"জমা করি\" : \"খরচের হিসাব যুক্ত করি\"}\n        </Button>\n      </form>\n    </Modal>\n  );\n}\n\nexport default SalamiAddModal;\n","import React, { useContext } from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport { salamiRemoveModalContext } from \"../UserContext\";\nimport axios from \"axios\";\n\ninterface IProps {\n  open: {\n    status: boolean;\n    id?: String;\n  };\n  whatIDid: string;\n}\n\nfunction SalamiRemoveModal({ open, whatIDid }: IProps) {\n  const { removeOpen, setRemoveOpen } = useContext(salamiRemoveModalContext);\n\n  // Salami Remove Handler\n  const salamiRemoveHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    // Remove salami from the database\n    const removeSalamiById = async () => {\n      if (whatIDid === \"earn\") {\n        const response = await axios.post(\n          \"https://eid-salami.herokuapp.com/earn/id\",\n          {\n            id: open.id,\n          }\n        );\n        if (response.data.data.deletedCount > 0) {\n          setRemoveOpen({\n            status: false,\n          });\n        }\n      }\n\n      if (whatIDid === \"spend\") {\n        const response = await axios.post(\n          \"https://eid-salami.herokuapp.com/spend/id\",\n          {\n            id: open.id,\n          }\n        );\n        if (response.data.data.deletedCount > 0) {\n          setRemoveOpen({\n            status: false,\n          });\n        }\n      }\n    };\n    removeSalamiById();\n  };\n\n  // Salami close Handler\n  const salamiCloseHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    setRemoveOpen({\n      status: false,\n    });\n  };\n\n  return (\n    <Modal\n      open={open.status}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div className=\"modal-wrapper\" style={{ width: \"300px\" }}>\n        <h3>সত্যি মুছে ফেলতে চাও?</h3>\n        <div className=\"buttons-list\">\n          <Button\n            type=\"button\"\n            onClick={salamiRemoveHandler}\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ margin: \"20px\" }}\n          >\n            হ্যাঁ\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={salamiCloseHandler}\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ margin: \"20px\" }}\n          >\n            না\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default SalamiRemoveModal;\n","import TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { Link } from \"react-router-dom\";\n\n// icon\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\n// types\ninterface IProps {\n  list: {\n    _id: number;\n    name: string;\n    amount: number;\n  };\n  index: number;\n  salamiHandleRemoveOpen: (id: number) => void;\n}\n\nfunction SalamiList({ list, index, salamiHandleRemoveOpen }: IProps) {\n  return (\n    <TableRow key={list._id}>\n      <TableCell>\n        <b>{index + 1}</b>\n      </TableCell>\n      <TableCell>{list.name}</TableCell>\n      <TableCell align=\"center\">৳ {list.amount}</TableCell>\n      <TableCell align=\"center\" style={{ width: \"100px\" }}>\n        <Link to=\"/\">\n          <EditIcon style={{ color: \"green\" }} />\n        </Link>\n      </TableCell>\n      <TableCell align=\"center\" style={{ width: \"100px\" }}>\n        <Link to=\"/\" onClick={(e) => salamiHandleRemoveOpen(list._id)}>\n          <DeleteForeverIcon style={{ color: \"red\" }} />\n        </Link>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nexport default SalamiList;\n","import TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { Link } from \"react-router-dom\";\n\n// icon\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\n// Interface\ninterface IProps {\n  list: {\n    id: number;\n    name?: string;\n    purpose?: string;\n    amount: number;\n    status: string;\n  };\n}\n\nfunction SalamiSampleList({ list }: IProps) {\n  return (\n    <TableRow key={list.id}>\n      <TableCell>{list.id}</TableCell>\n      <TableCell>{list.name ? list.name : list.purpose}</TableCell>\n      <TableCell align=\"center\">৳ {list.amount}</TableCell>\n      <TableCell align=\"center\" style={{ width: \"100px\" }}>\n        <Link to=\"/\">\n          <EditIcon style={{ color: \"green\" }} />\n        </Link>\n      </TableCell>\n      <TableCell align=\"center\" style={{ width: \"100px\" }}>\n        <Link to=\"/\">\n          <DeleteForeverIcon style={{ color: \"red\" }} />\n        </Link>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nexport default SalamiSampleList;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport SalamiAddModal from \"./../Modal/SalamiAddModal\";\nimport SalamiRemoveModal from \"./../Modal/SalamiRemoveModal\";\nimport axios from \"axios\";\nimport SalamiList from \"./../Table/SalamiList\";\nimport SalamiSampleList from \"./../Table/SalamiSampleList\";\n\nimport { userContext } from \"./../UserContext\";\nimport { salamiAddModalContext } from \"./../UserContext\";\nimport { salamiRemoveModalContext } from \"./../UserContext\";\nimport { salamiBalance } from \"./../UserContext\";\n\n// interface\ninterface ISate {\n  list: {\n    _id: number;\n    name: string;\n    amount: number;\n  }[];\n  sampleUser: {\n    id: number;\n    name: string;\n    amount: number;\n    status: string;\n  }[];\n}\n\nfunction Earn() {\n  const sampleUsers = useContext<ISate[\"sampleUser\"]>(userContext);\n  const { addOpen, setAddOpen } = useContext(salamiAddModalContext);\n  const { removeOpen, setRemoveOpen } = useContext(salamiRemoveModalContext);\n  const [earnList, setEarnList] = useState<ISate[\"list\"]>([]);\n  const { balance, setBalance } = useContext(salamiBalance);\n\n  useEffect(() => {\n    const salamiData = async () => {\n      const response = await axios.get(\n        \"https://eid-salami.herokuapp.com/earn/all\"\n      );\n      const salmiData = response.data.data;\n      setEarnList(salmiData);\n    };\n    salamiData().catch((err) => console.log(err.message));\n  }, []);\n\n  // Total Amount\n  useEffect(() => {\n    const totalAmount = () => {\n      const totalBalance = earnList.reduce(\n        (acc, current) => Number(acc) + Number(current.amount),\n        0\n      );\n      return totalBalance;\n    };\n    totalAmount();\n    setBalance({ ...balance, earn: totalAmount() });\n  }, [earnList]);\n\n  // Salami Handle Modal Add\n  const salamiHandleAddOpen = (whatIDid: string) => {\n    setAddOpen({\n      status: true,\n      whatIDid: whatIDid,\n    });\n  };\n\n  // Salami Handle Modal Add\n  const salamiHandleAddClose = () => {\n    setAddOpen({\n      status: false,\n      whatIDid: \"\",\n    });\n  };\n\n  // Salami Handle Modal Remove\n  const salamiHandleRemoveOpen = (id: number) => {\n    setRemoveOpen({\n      status: true,\n      id: id,\n    });\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <TableContainer>\n          <Table>\n            <TableBody>\n              {/* Table Header */}\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>\n                  <b>নাম</b>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <b>টাকা</b>\n                </TableCell>\n                <TableCell align=\"center\" style={{ width: \"100px\" }}>\n                  <b>সম্পাদনা</b>\n                </TableCell>\n                <TableCell align=\"center\" style={{ width: \"100px\" }}>\n                  <b>অপসারণ</b>\n                </TableCell>\n              </TableRow>\n              {\n                /* Table body from loop */\n                earnList.length\n                  ? earnList.map((list, index) => (\n                      <SalamiList\n                        key={index}\n                        list={list}\n                        index={index}\n                        salamiHandleRemoveOpen={salamiHandleRemoveOpen}\n                      />\n                    ))\n                  : sampleUsers.map((list) => (\n                      <SalamiSampleList list={list} key={list.id} />\n                    ))\n              }\n\n              {/* Total Amount */}\n              <TableRow>\n                <TableCell colSpan={2} align=\"right\">\n                  <b>ঈদ এ মোট সালামি উঠেছে</b>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <b>৳ {balance.earn || \"600\"}</b>\n                </TableCell>\n                <TableCell colSpan={2}>\n                  <Button\n                    type=\"button\"\n                    onClick={() => salamiHandleAddOpen(\"earn\")}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ margin: \"10px 0px 0px 50px\" }}\n                  >\n                    সালামি যোগ করুন\n                  </Button>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n\n      <SalamiAddModal\n        open={addOpen.status}\n        salamiHandleAddClose={salamiHandleAddClose}\n      />\n      <SalamiRemoveModal open={removeOpen} whatIDid=\"earn\" />\n    </Grid>\n  );\n}\n\nexport default Earn;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport { salamiSpendContext } from \"./../UserContext\";\nimport SalamiSampleList from \"./../Table/SalamiSampleList\";\nimport SalamiList from \"../Table/SalamiList\";\nimport { salamiRemoveModalContext } from \"./../UserContext\";\nimport { salamiAddModalContext } from \"./../UserContext\";\nimport axios from \"axios\";\nimport SalamiAddModal from \"../Modal/SalamiAddModal\";\nimport SalamiRemoveModal from \"../Modal/SalamiRemoveModal\";\nimport { salamiBalance } from \"./../UserContext\";\n\ninterface ISate {\n  sampleUser: {\n    id: number;\n    purpose: string;\n    amount: number;\n    status: string;\n  }[];\n  list: {\n    _id: number;\n    name: string;\n    amount: number;\n  }[];\n}\n\nfunction Spend() {\n  const sampleUsers = useContext<ISate[\"sampleUser\"]>(salamiSpendContext);\n  const [spendList, setSpendList] = useState<ISate[\"list\"]>([]);\n  const { addOpen, setAddOpen } = useContext(salamiAddModalContext);\n  const { removeOpen, setRemoveOpen } = useContext(salamiRemoveModalContext);\n  const { balance, setBalance } = useContext(salamiBalance);\n\n  // Get all spend List\n  useEffect(() => {\n    const getAllSpendList = async () => {\n      const response = await axios.get(\n        \"https://eid-salami.herokuapp.com/spend/all\"\n      );\n      setSpendList(response.data.data);\n    };\n    getAllSpendList();\n  }, []);\n\n  // Total Amount\n  useEffect(() => {\n    const totalAmount = () => {\n      const totalBalance = spendList.reduce(\n        (acc, current) => Number(acc) + Number(current.amount),\n        0\n      );\n      return totalBalance;\n    };\n    totalAmount();\n    setBalance({ ...balance, spend: totalAmount() });\n  }, [spendList]);\n\n  // Salami List Remove\n  const salamiHandleRemoveOpen = (id: number) => {\n    setRemoveOpen({\n      status: true,\n      id: id,\n    });\n  };\n\n  // Salami handle popup model close\n  const salamiHandleAddClose = () => {\n    setAddOpen({\n      status: false,\n      whatIDid: \"\",\n    });\n  };\n\n  // Salami handle popup model open\n  const salamiHandlerOpen = (whatIDid: string) => {\n    setAddOpen({\n      status: true,\n      whatIDid: whatIDid,\n    });\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <TableContainer>\n          <Table>\n            <TableBody>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>\n                  <b>খরচের খাত</b>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <b>টাকা</b>\n                </TableCell>\n                <TableCell align=\"center\" style={{ width: \"100px\" }}>\n                  <b>সম্পাদনা</b>\n                </TableCell>\n                <TableCell align=\"center\" style={{ width: \"100px\" }}>\n                  <b>অপসারণ</b>\n                </TableCell>\n              </TableRow>\n\n              {/* Main Table Data  */}\n\n              {spendList && spendList.length\n                ? spendList.map((list, index) => (\n                    <SalamiList\n                      key={index}\n                      list={list}\n                      index={index}\n                      salamiHandleRemoveOpen={salamiHandleRemoveOpen}\n                    />\n                  ))\n                : sampleUsers.map((list) => (\n                    <SalamiSampleList list={list} key={list.id} />\n                  ))}\n\n              {/* Total Amount */}\n              <TableRow>\n                <TableCell colSpan={2} align=\"right\">\n                  <b>ঈদ এ মোট করছ হয়েছে</b>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <b>৳ {balance.spend}</b>\n                </TableCell>\n                <TableCell colSpan={2}>\n                  <Button\n                    type=\"button\"\n                    onClick={() => salamiHandlerOpen(\"spend\")}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ margin: \"10px 0px 0px 50px\" }}\n                  >\n                    খরচ বাদ দিন\n                  </Button>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n\n      <SalamiAddModal\n        open={addOpen.status}\n        salamiHandleAddClose={salamiHandleAddClose}\n      />\n      <SalamiRemoveModal open={removeOpen} whatIDid=\"spend\" />\n    </Grid>\n  );\n}\n\nexport default Spend;\n","import React, { useContext } from \"react\";\nimport { salamiBalance } from \"./../UserContext\";\n\nfunction Balance() {\n  const { balance, setBalance } = useContext(salamiBalance);\n  console.log(balance);\n  return (\n    <div>\n      <h4>ঈদ সালামি থেকে মোট আয় : {balance.earn} টাকা</h4>\n      <h4>ঈদ সালামি থেকে মোট খরচ : {balance.spend} টাকা</h4>\n      <hr />\n      <h3>মোট আছে : {balance.earn - balance.spend} টাকা</h3>\n    </div>\n  );\n}\n\nexport default Balance;\n","import React, { useState, ReactNode } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Earn from \"./Earn/Earn\";\nimport Spend from \"./Spend/Spend\";\nimport Balance from \"./Balance/Balance\";\n\ninterface TabPanelProps {\n  children?: ReactNode;\n  index: number;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index } = props;\n\n  return (\n    <div hidden={value !== index} id={`scrollable-auto-tabpanel-${index}`}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction MainPage() {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      <Paper>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          centered\n        >\n          <Tab label=\"সালামি থেকে আয়\" />\n          <Tab label=\"সালামি থেকে খরচ\" />\n          <Tab label=\"বর্তমানে যা আছে\" />\n        </Tabs>\n      </Paper>\n\n      <TabPanel value={value} index={0}>\n        <Earn />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Spend />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Balance />\n      </TabPanel>\n    </>\n  );\n}\n\nexport default MainPage;\n","export function MainTitle() {\n  return <h1 className=\"main-title\">ঈদ সালামির হিসাব নিকাশ</h1>;\n}\n\nexport function EarnTitle() {\n  return <h3>সালামি থেকে আয়</h3>;\n}\n\nexport function SpendTitle() {\n  return <h3>সালামি থেকে খরচ</h3>;\n}\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport MainPage from \"./components/MainPage\";\nimport { MainTitle } from \"./components/Title\";\nimport { UserProvider } from \"./components/UserContext\";\n\nfunction App() {\n  return (\n    <div className=\"container-width\">\n      <UserProvider>\n        <MainTitle />\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <MainPage />\n            </Route>\n          </Switch>\n        </Router>\n      </UserProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}